# Use workflow from: Branch 'your current hotfix branch'
# Version: 'use the version you branch off from and add a .1 e.g. 1.221.1.1' 
# Once this workflow has completed, go to manual deploy to 'environment'
# Use the same version e.g. 1.221.1.1 and use workflow from main
name: Hotfix

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (format: x.xxx.x.x, ie: 1.221.1.1) where 1.221.1 is the version you branch off from'
        required: true

concurrency: CI
jobs:

  set-release-version:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Decide next version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Set Release Version
        id: set-version
        run: |
          echo ${{ github.event.inputs.version }} > semver
          echo $(cat semver)
          echo ::set-output name=version::$(cat semver)
          echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
        shell: bash

  build-acm-api:
    name: Build ACM Api
    uses: ./.github/workflows/build-image.yml
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    with:
      image-file: ar-acm-api-image.tar
      image-name: verenigingsregister-acmapi
      test-project: AssociationRegistry.Test.Acm.Api
      build-project: AssociationRegistry.Acm.Api/
      semver: ${{ needs.set-release-version.outputs.version }}
      run-docker-acm: true
      run-docker-wiremock: false
      run-docker-db: true
      run-docker-elasticsearch: false
      run-docker-localstack: false
      run-docker-otelcollector: false
      pre-gen-marten: true
    secrets: inherit

  build-public-api:
    name: Build Public Api
    uses: ./.github/workflows/build-image.yml
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    with:
      image-file: ar-public-api-image.tar
      image-name: verenigingsregister-publicapi
      test-project: AssociationRegistry.Test.Public.Api
      build-project: AssociationRegistry.Public.Api/
      semver: ${{ needs.set-release-version.outputs.version }}
      run-docker-acm: false
      run-docker-wiremock: false
      run-docker-db: true
      run-docker-elasticsearch: true
      run-docker-localstack: true
      run-docker-otelcollector: true
      pre-gen-marten: false
    secrets: inherit

  build-public-projections:
    name: Build Public Projections
    uses: ./.github/workflows/build-image.yml
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    with:
      image-file: ar-public-projections-image.tar
      image-name: verenigingsregister-publicprojections
      build-project: AssociationRegistry.Public.ProjectionHost/
      semver: ${{ needs.set-release-version.outputs.version }}
      run-docker-acm: false
      run-docker-wiremock: false
      run-docker-db: true
      run-docker-elasticsearch: true
      run-docker-localstack: false
      run-docker-otelcollector: true
      pre-gen-marten: true
    secrets: inherit

  build-admin-api:
    name: Build Admin Api
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run es container
        shell: bash
        run: |
          docker run -d --name elasticsearch -p 9200:9200 -m 2g -e ELASTIC_PASSWORD=local_development -e discovery.type=single-node -e xpack.security.transport.ssl.enabled=false docker.elastic.co/elasticsearch/elasticsearch:8.4.3

      - name: Run localstack container
        shell: bash
        run: |
          docker run -d --name localstack -v ${{ github.workspace }}/.localstack/init:/etc/localstack/init -p 4566:4566 -p 4510-4559:4510-4559 -e SERVICES=sqs,s3 -e DOCKER_HOST=unix:///var/run/docker.sock -e DEFAULT_REGION=us-east-1 -e DEBUG=1 -e PORT_WEB_UI=8080 localstack/localstack

      - name: Run wiremock container
        shell: bash
        run: |
          docker run -d --name wiremock -v ${{ github.workspace }}/wiremock:/home/wiremock -p 8080:8080 wiremock/wiremock:2.35.0-1 --global-response-templating --verbose

      - name: Run ACM container
        shell: bash
        run: |
          docker run -d --name acm -p 5051:80 -v ${{ github.workspace }}/identityserver:/home/identityserver ghcr.io/informatievlaanderen/identity-server-fake:1284967

      - name: Run db container
        shell: bash
        run: |
          docker run -d --name db -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=root -e POSTGRES_DB=verenigingsregister postgres:15.0

      - name: Run OpenTelemetry container
        shell: bash
        run: |
          docker run -d --name otel-collector -p 4317:4317 -v ${{ github.workspace }}./otel-collector-config.yaml:/etc/otel-collector-config.yaml otel/opentelemetry-collector-contrib

      - name: Wait for db container
        shell: bash
        run: |
          timeout 90s bash -c "until docker exec db pg_isready ; do sleep 5 ; done"

      - name: Build
        shell: bash
        env:
          BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          SEMVER: ${{ needs.set-release-version.outputs.version }}
        run: |
          docker buildx build . --build-arg ELASTIC_HOST --build-arg CI_BUILD_NUMBER=${{ needs.set-release-version.outputs.version }} --build-arg GIT_HASH --network=host -f src/AssociationRegistry.Admin.Api/Dockerfile \
          --tag ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}/verenigingsregister-adminapi:${{ needs.set-release-version.outputs.version }}

      - name: Show images
        shell: bash
        run: docker images

      - name: Save Api Image
        if: needs.set-release-version.outputs.version != 'none'
        shell: bash
        run: docker image save ${{secrets.BUILD_DOCKER_REGISTRY_IK4}}/verenigingsregister-adminapi:${{ needs.set-release-version.outputs.version }} -o ~/ar-admin-api-image.tar
        env:
          BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          SEMVER: ${{ needs.set-release-version.outputs.version }}

      - name: Upload Api artifact
        if: needs.set-release-version.outputs.version != 'none'
        uses: actions/upload-artifact@v4
        with:
          name: verenigingsregister-adminapi
          path: ~/ar-admin-api-image.tar

      - name: Shows logs ACM container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs acm

      - name: Shows logs elasticsearch container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs elasticsearch

      - name: Shows logs localstack container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs localstack

      - name: Shows logs wiremock container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs wiremock

      - name: Shows logs db container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs db

      - name: Shows logs otelcollector container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs otel-collector

  build-admin-projections:
    name: Build Admin Projections
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run es container
        shell: bash
        run: |
          docker run -d --name elasticsearch -p 9200:9200 -m 2g -e ELASTIC_PASSWORD=local_development -e discovery.type=single-node -e xpack.security.transport.ssl.enabled=false docker.elastic.co/elasticsearch/elasticsearch:8.4.3

      - name: Run localstack container
        shell: bash
        run: |
          docker run -d --name localstack -v ${{ github.workspace }}/.localstack/init:/etc/localstack/init -p 4566:4566 -p 4510-4559:4510-4559 -e SERVICES=sqs,s3 -e DOCKER_HOST=unix:///var/run/docker.sock -e DEFAULT_REGION=us-east-1 -e DEBUG=1 -e PORT_WEB_UI=8080 localstack/localstack

      - name: Run wiremock container
        shell: bash
        run: |
          docker run -d --name wiremock -v ${{ github.workspace }}/wiremock:/home/wiremock -p 8080:8080 wiremock/wiremock:2.35.0-1 --global-response-templating --verbose

      - name: Run ACM container
        shell: bash
        run: |
          docker run -d --name acm -p 5051:80 -v ${{ github.workspace }}/identityserver:/home/identityserver ghcr.io/informatievlaanderen/identity-server-fake:1284967

      - name: Run db container
        shell: bash
        run: |
          docker run -d --name db -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=root -e POSTGRES_DB=verenigingsregister postgres:15.0

      - name: Run OpenTelemetry container
        shell: bash
        run: |
          docker run -d --name otel-collector -p 4317:4317 -v ${{ github.workspace }}./otel-collector-config.yaml:/etc/otel-collector-config.yaml otel/opentelemetry-collector-contrib

      - name: Wait for db container
        shell: bash
        run: |
          timeout 90s bash -c "until docker exec db pg_isready ; do sleep 5 ; done"

      - name: Build
        shell: bash
        env:
          BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          SEMVER: ${{ needs.set-release-version.outputs.version }}
        run: |
          docker buildx build . --build-arg ELASTIC_HOST --build-arg CI_BUILD_NUMBER=${{ needs.set-release-version.outputs.version }} --build-arg GIT_HASH --network=host -f src/AssociationRegistry.Admin.ProjectionHost/Dockerfile \
          --tag ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}/verenigingsregister-adminprojections:${{ needs.set-release-version.outputs.version }}

      - name: Show images
        shell: bash
        run: docker images

      - name: Save Api Image
        if: needs.set-release-version.outputs.version != 'none'
        shell: bash
        run: docker image save ${{secrets.BUILD_DOCKER_REGISTRY_IK4}}/verenigingsregister-adminprojections:${{ needs.set-release-version.outputs.version }} -o ~/ar-admin-projections-image.tar
        env:
          BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          SEMVER: ${{ needs.set-release-version.outputs.version }}

      - name: Upload Api artifact
        if: needs.set-release-version.outputs.version != 'none'
        uses: actions/upload-artifact@v4
        with:
          name: verenigingsregister-adminprojections
          path: ~/ar-admin-projections-image.tar

      - name: Shows logs ACM container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs acm

      - name: Shows logs elasticsearch container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs elasticsearch

      - name: Shows logs localstack container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs localstack

      - name: Shows logs wiremock container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs wiremock

      - name: Shows logs db container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs db

      - name: Shows logs otelcollector container
        if: ${{ failure() }}
        shell: bash
        run: |
          docker logs otel-collector

  build-admin-address-sync:
    name: Build Admin Address Sync Scheduled Task
    uses: ./.github/workflows/build-image.yml
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    with:
      image-file: ar-admin-address-sync-image.tar
      image-name: verenigingsregister-adressensync
      test-project: AssociationRegistry.Test.Admin.AddressSync
      build-project: AssociationRegistry.Admin.AddressSync/
      semver: ${{ needs.set-release-version.outputs.version }}
      run-docker-acm: false
      run-docker-wiremock: false
      run-docker-db: true
      run-docker-elasticsearch: false
      run-docker-localstack: false
      run-docker-otelcollector: true
      pre-gen-marten: false
    secrets: inherit

  build-powerbi-exporthost:
    name: Build PowerBI Export Scheduled Task
    uses: ./.github/workflows/build-image.yml
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ set-release-version ]
    with:
      image-file: ar-powerbiexport-image.tar
      image-name: verenigingsregister-powerbiexport
      test-project: AssociationRegistry.Test.PowerBi.ExportHost
      build-project: AssociationRegistry.PowerBi.ExportHost/
      semver: ${{ needs.set-release-version.outputs.version }}
      run-docker-acm: false
      run-docker-wiremock: false
      run-docker-db: true
      run-docker-elasticsearch: false
      run-docker-localstack: false
      run-docker-otelcollector: true
      pre-gen-marten: false
    secrets: inherit

  build-sync-lambda:
    name: Build Sync Lambda
    needs: [ set-release-version ]
    runs-on: ubuntu-latest

    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    steps:
      - name: Check version
        shell: bash
        run: echo $SEMVER
        env:
          SEMVER: ${{ needs.set-release-version.outputs.version }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Parse repository name
        run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV
        shell: bash

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}

      - name: .NET version
        shell: bash
        run: dotnet --info

      - name: Restore dotnet tools
        shell: bash
        run: |
          dotnet tool restore

      - name: Paket restore
        shell: bash
        run: dotnet paket restore

      - name: Dotnet restore
        shell: bash
        run: dotnet restore --runtime linux-x64

      - name: Package lambda
        shell: bash
        run: cd src/AssociationRegistry.KboMutations.SyncLambda && dotnet lambda package --region ${{ secrets.VBR_AWS_REGION }}

      - name: Upload Lambda as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-sync-${{ needs.set-release-version.outputs.version }}
          path: src/AssociationRegistry.KboMutations.SyncLambda/bin/Release/net8.0/AssociationRegistry.KboMutations.SyncLambda.zip

  push_images_to_ik4_devops:
    if: needs.set-release-version.outputs.version != 'none'
    needs: [
      set-release-version,
      build-acm-api,
      build-public-api,
      build-public-projections,
      build-admin-api,
      build-admin-projections,
      build-admin-address-sync,
      build-powerbi-exporthost,
      build-sync-lambda
    ]
    name: Push images IK4 (DevOps)
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials (DevOps)
        if: needs.set-release-version.outputs.version != 'none'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.VBR_AWS_BUILD_USER_ACCESS_KEY_ID_IK4 }}
          aws-secret-access-key: ${{ secrets.VBR_AWS_BUILD_USER_SECRET_ACCESS_KEY_IK4 }}
          aws-region: ${{ secrets.VBR_AWS_REGION_PRD }}

      - name: Login to Amazon ECR (DevOps)
        if: needs.set-release-version.outputs.version != 'none'
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Download Acm Api artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-acmapi
          path: ~/

      - name: Load Acm Api image
        shell: bash
        run: docker image load -i ~/ar-acm-api-image.tar

      - name: Download Public Api artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-publicapi
          path: ~/

      - name: Load Public Api image
        shell: bash
        run: docker image load -i ~/ar-public-api-image.tar

      - name: Download Public Projections artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-publicprojections
          path: ~/

      - name: Load Public Projections image
        shell: bash
        run: docker image load -i ~/ar-public-projections-image.tar

      - name: Download Admin Api artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-adminapi
          path: ~/

      - name: Load Admin Api image
        shell: bash
        run: docker image load -i ~/ar-admin-api-image.tar

      - name: Download Admin Projections artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-adminprojections
          path: ~/

      - name: Load Admin Projections image
        shell: bash
        run: docker image load -i ~/ar-admin-projections-image.tar

      - name: Download Admin Address Sync Scheduled Task artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-adressensync
          path: ~/

      - name: Load Admin Address Sync Scheduled Task image
        shell: bash
        run: docker image load -i ~/ar-admin-address-sync-image.tar

      - name: Download PowerBI Export Scheduled Task artifact
        uses: actions/download-artifact@v4
        with:
          name: verenigingsregister-powerbiexport
          path: ~/

      - name: Load PowerBI Export Scheduled Task image
        shell: bash
        run: docker image load -i ~/ar-powerbiexport-image.tar

      - name: Push docker images to ECR Test
        if: needs.set-release-version.outputs.version != 'none'
        shell: bash
        run: |
          echo $SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-acmapi:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-adminapi:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-adminprojections:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-publicapi:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-publicprojections:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-adressensync:$SEMVER
          docker push $BUILD_DOCKER_REGISTRY_IK4/verenigingsregister-powerbiexport:$SEMVER
        env:
          BUILD_DOCKER_REGISTRY_IK4: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          SEMVER: ${{ needs.set-release-version.outputs.version }}
          WORKSPACE: ${{ github.workspace }}
