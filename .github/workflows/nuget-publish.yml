name: Publish Nuget

on:
  push:
    branches:
      - '!main'
  workflow_dispatch:

concurrency: CI
jobs:

  set-release-version:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Decide next version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Node version
        shell: bash
        run: node --version

      - name: Install NPM dependencies
        shell: bash
        run: npm install --legacy-peer-deps

      - name: Run Semantic Release dry-run
        shell: bash
        run: npx semantic-release --dry-run
        env:
          NPM_TOKEN: ${{ secrets.VBR_WEBCOMP_NPM_TOKEN }}
          BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY_IK4 }}
          GITHUB_TOKEN: ${{ secrets.VBR_ACTIONS_TOKEN }}
          GIT_COMMIT: ${{ github.sha }}
          GIT_USERNAME: ${{ secrets.VBR_GIT_USER }}
          GIT_AUTHOR_NAME: ${{ secrets.VBR_GIT_USER }}
          GIT_COMMITTER_NAME: ${{ secrets.VBR_GIT_USER }}
          GIT_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
          GIT_AUTHOR_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
          GIT_COMMITTER_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}

      - name: Set Release Version
        id: set-version
        run: |
          [ ! -f semver ] && echo none > semver
          echo $(cat semver)
          echo ::set-output name=version::$(cat semver)
          echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
        shell: bash

  pack-association-registry:
    name: Pack Association Registry Domain
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AssociationRegistry
      build-project: AssociationRegistry
      dotnet-version: ${{ secrets.VBR_DOTNET_VERSION }}
      semver: ${{ needs.set-release-version.outputs.version }}
    secrets: inherit

  pack-association-registry-magda:
    name: Pack Association Registry Magda
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AssociationRegistry.Magda
      build-project: AssociationRegistry.Magda
      # dotnet-version: ${{ secrets.VBR_DOTNET_VERSION }}
      semver: ${{ needs.set-release-version.outputs.version }}
    secrets: inherit

  publish_to_nuget:
    needs: [ release ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.release.outputs.version != 'none') }}
    name: Publish to NuGet
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ secrets.VBR_DOTNET_VERSION }}

      - name: .NET version
        shell: bash
        run: dotnet --info

      - name: Download NuGet package 'association-registry'
        uses: actions/download-artifact@v4.1.4
        with:
          name: nuget-Be.Vlaanderen.Basisregisters.AssociationRegistry-${{ needs.release.outputs.version }}.nupkg
          path: dist/nuget/

      - name: Publish packages to NuGet 'association-registry'
        shell: bash
        run: |
          dotnet nuget push dist/nuget/Be.Vlaanderen.Basisregisters.AssociationRegistry.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        env:
          SEMVER: ${{  needs.release.outputs.version }}
          WORKSPACE: ${{ github.workspace }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Download NuGet package 'association-registry-magda'
        uses: actions/download-artifact@v4.1.4
        with:
          name: nuget-Be.Vlaanderen.Basisregisters.AssociationRegistry.Magda-${{ needs.release.outputs.version }}
          path: dist/nuget/Be.Vlaanderen.Basisregisters.AssociationRegistry.Magda.${{ needs.release.outputs.version }}.nupkg

      - name: Publish packages to NuGet 'association-registry-magda'
        shell: bash
        run: |
          dotnet nuget push dist/nuget/Be.Vlaanderen.Basisregisters.AssociationRegistry.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        env:
          SEMVER: ${{  needs.release.outputs.version }}
          WORKSPACE: ${{ github.workspace }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
