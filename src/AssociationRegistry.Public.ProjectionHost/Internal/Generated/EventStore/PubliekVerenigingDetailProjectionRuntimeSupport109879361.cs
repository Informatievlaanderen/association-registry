// <auto-generated/>
#pragma warning disable
using AssociationRegistry.Public.ProjectionHost.Projections.Detail;
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: PubliekVerenigingDetailProjectionLiveAggregation109879361
    public class PubliekVerenigingDetailProjectionLiveAggregation109879361 : Marten.Events.Aggregation.SyncLiveAggregatorBase<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument>
    {
        private readonly AssociationRegistry.Public.ProjectionHost.Projections.Detail.PubliekVerenigingDetailProjection _publiekVerenigingDetailProjection;

        public PubliekVerenigingDetailProjectionLiveAggregation109879361(AssociationRegistry.Public.ProjectionHost.Projections.Detail.PubliekVerenigingDetailProjection publiekVerenigingDetailProjection)
        {
            _publiekVerenigingDetailProjection = publiekVerenigingDetailProjection;
        }



        public override AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument Build(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument snapshot)
        {
            if (!events.Any()) return null;
            AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument publiekVerenigingDetailDocument = null;
            snapshot ??= Create(events[0], session);
            foreach (var @event in events)
            {
                snapshot = Apply(@event, snapshot, session);
            }

            return snapshot;
        }


        public AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<AssociationRegistry.Events.VerenigingWerdGeregistreerd> event_VerenigingWerdGeregistreerd1:
                    return _publiekVerenigingDetailProjection.Create(event_VerenigingWerdGeregistreerd1);
                    break;
            }

            return new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
        }


        public AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument Apply(Marten.Events.IEvent @event, AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument aggregate, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<AssociationRegistry.Events.NaamWerdGewijzigd> event_NaamWerdGewijzigd2:
                    _publiekVerenigingDetailProjection.Apply(event_NaamWerdGewijzigd2, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.StartdatumWerdGewijzigd> event_StartdatumWerdGewijzigd3:
                    _publiekVerenigingDetailProjection.Apply(event_StartdatumWerdGewijzigd3, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.KorteNaamWerdGewijzigd> event_KorteNaamWerdGewijzigd4:
                    _publiekVerenigingDetailProjection.Apply(event_KorteNaamWerdGewijzigd4, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.KorteBeschrijvingWerdGewijzigd> event_KorteBeschrijvingWerdGewijzigd5:
                    _publiekVerenigingDetailProjection.Apply(event_KorteBeschrijvingWerdGewijzigd5, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdToegevoegd> event_ContactgegevenWerdToegevoegd6:
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdToegevoegd6, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdGewijzigd> event_ContactgegevenWerdGewijzigd7:
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdGewijzigd7, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdVerwijderd> event_ContactgegevenWerdVerwijderd8:
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdVerwijderd8, aggregate);
                    break;
                case Marten.Events.IEvent<AssociationRegistry.Events.HoofdactiviteitenVerenigingsloketWerdenGewijzigd> event_HoofdactiviteitenVerenigingsloketWerdenGewijzigd9:
                    _publiekVerenigingDetailProjection.Apply(event_HoofdactiviteitenVerenigingsloketWerdenGewijzigd9, aggregate);
                    break;
            }

            return aggregate;
        }

    }

    // END: PubliekVerenigingDetailProjectionLiveAggregation109879361
    
    
    // START: PubliekVerenigingDetailProjectionInlineHandler109879361
    public class PubliekVerenigingDetailProjectionInlineHandler109879361 : Marten.Events.Aggregation.AggregationRuntime<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string> _slicer;
        private readonly Marten.Internal.Storage.IDocumentStorage<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string> _storage;
        private readonly AssociationRegistry.Public.ProjectionHost.Projections.Detail.PubliekVerenigingDetailProjection _publiekVerenigingDetailProjection;

        public PubliekVerenigingDetailProjectionInlineHandler109879361(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string> slicer, Marten.Internal.Storage.IDocumentStorage<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string> storage, AssociationRegistry.Public.ProjectionHost.Projections.Detail.PubliekVerenigingDetailProjection publiekVerenigingDetailProjection) : base(store, projection, slicer, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _storage = storage;
            _publiekVerenigingDetailProjection = publiekVerenigingDetailProjection;
        }



        public override async System.Threading.Tasks.ValueTask<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument, string> slice, Marten.Events.IEvent evt, AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<AssociationRegistry.Events.NaamWerdGewijzigd> event_NaamWerdGewijzigd11:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_NaamWerdGewijzigd11, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdToegevoegd> event_ContactgegevenWerdToegevoegd15:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdToegevoegd15, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.KorteBeschrijvingWerdGewijzigd> event_KorteBeschrijvingWerdGewijzigd14:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_KorteBeschrijvingWerdGewijzigd14, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.StartdatumWerdGewijzigd> event_StartdatumWerdGewijzigd12:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_StartdatumWerdGewijzigd12, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdGewijzigd> event_ContactgegevenWerdGewijzigd16:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdGewijzigd16, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.ContactgegevenWerdVerwijderd> event_ContactgegevenWerdVerwijderd17:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_ContactgegevenWerdVerwijderd17, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.KorteNaamWerdGewijzigd> event_KorteNaamWerdGewijzigd13:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_KorteNaamWerdGewijzigd13, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.VerenigingWerdGeregistreerd> event_VerenigingWerdGeregistreerd19:
                    aggregate = _publiekVerenigingDetailProjection.Create(event_VerenigingWerdGeregistreerd19);
                    return aggregate;
                case Marten.Events.IEvent<AssociationRegistry.Events.HoofdactiviteitenVerenigingsloketWerdenGewijzigd> event_HoofdactiviteitenVerenigingsloketWerdenGewijzigd18:
                    aggregate ??= new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
                    _publiekVerenigingDetailProjection.Apply(event_HoofdactiviteitenVerenigingsloketWerdenGewijzigd18, aggregate);
                    return aggregate;
            }

            return aggregate;
        }


        public AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<AssociationRegistry.Events.VerenigingWerdGeregistreerd> event_VerenigingWerdGeregistreerd10:
                    return _publiekVerenigingDetailProjection.Create(event_VerenigingWerdGeregistreerd10);
                    break;
            }

            return new AssociationRegistry.Public.Schema.Detail.PubliekVerenigingDetailDocument();
        }

    }

    // END: PubliekVerenigingDetailProjectionInlineHandler109879361
    
    
}

